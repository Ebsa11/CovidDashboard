# -*- coding: utf-8 -*-
"""WOMScrapeFunc

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1S01jzFgHDN1HspQjevqky25WI_sElPs5
"""

import re
import requests
import json
from bs4 import BeautifulSoup

#Function for some repetative data scraping/cleaning
def getData(day,country,totdead,newdead,totdeadpop,newdeadpop,world):
  start = 9
  if world != 0:
    start = 8
  for i in range(start,len(day)-8):
    country.append(day[i].find_all("td")[1].text)

    if day[i].find_all("td")[4].text != "":
      if re.sub(" ","",day[i].find_all("td")[4].text) == "":
        totdead.append("0")
      else:
        totdead.append(re.sub(" ","",day[i].find_all("td")[4].text))
    else:
      totdead.append("0")

    if day[i].find_all("td")[5].text != "":
      newdead.append(day[i].find_all("td")[5].text)
      if day[i].find_all("td")[14].text != "":
        newdeadpop.append((int(re.sub(",","",day[i].find_all("td")[5].text))*1000000)
            /int(re.sub(",","",day[i].find_all("td")[14].text)))
      else:
        newdeadpop.append("0")
    else:
      newdead.append("0")
      newdeadpop.append(0)
    
    if day[i].find_all("td")[11].text != "":
      totdeadpop.append(day[i].find_all("td")[11].text)
    else:
      totdeadpop.append("0")
  return country,totdead,newdead,totdeadpop,newdeadpop

# Scrape data from today, yesterday, and two days ago
def Scrape3Days(world = 0):
  url = "https://www.worldometers.info/coronavirus/"
  req = requests.get(url)
  doc = BeautifulSoup(req.text, 'html.parser')

  # Get tables of data for each day
  table_tabs = doc.find_all("div", {"class":"tab-content"},{"id":"nav-today"})
  allTables = table_tabs[2].find_all("table")
  today = allTables[0].find_all("tr")
  yesterday = allTables[1].find_all("tr")
  yesterday2 = allTables[2].find_all("tr")

  # Initiate data lists
  found_countries_today = []
  found_total_deaths_today  = []
  found_new_deaths_today  = []
  found_total_deaths_pop_today  = []
  found_new_deaths_pop_today  = []

  found_countries_yesterday = []
  found_total_deaths_yesterday  = []
  found_new_deaths_yesterday  = []
  found_total_deaths_pop_yesterday  = []
  found_new_deaths_pop_yesterday  = []

  found_countries_yesterday2 = []
  found_total_deaths_yesterday2  = []
  found_new_deaths_yesterday2  = []
  found_total_deaths_pop_yesterday2  = []
  found_new_deaths_pop_yesterday2  = []

  # Excract data values using above function
  countries_today,total_deaths_today,new_deaths_today,total_deaths_pop_today,new_deaths_pop_today = getData(
      today,found_countries_today,found_total_deaths_today,found_new_deaths_today,found_total_deaths_pop_today,found_new_deaths_pop_today,world)
  countries_yesterday,total_deaths_yesterday,new_deaths_yesterday,total_deaths_pop_yesterday,new_deaths_pop_yesterday = getData(
      yesterday,found_countries_yesterday,found_total_deaths_yesterday,found_new_deaths_yesterday,found_total_deaths_pop_yesterday,found_new_deaths_pop_yesterday,world)
  countries_yesterday2,total_deaths_yesterday2,new_deaths_yesterday2,total_deaths_pop_yesterday2,new_deaths_pop_yesterday2 = getData(
      yesterday2,found_countries_yesterday2,found_total_deaths_yesterday2,found_new_deaths_yesterday2,found_total_deaths_pop_yesterday2,found_new_deaths_pop_yesterday2,world)

  # Turn data into dictionaries
  data_today = {
      "Country": countries_today,
      "Cumulative Deaths": total_deaths_today,
      "Daily Deaths": new_deaths_today,
      "Population Cumulative Deaths": total_deaths_pop_today,
      "Population Daily Deaths": new_deaths_pop_today,
  }
  data_yesterday = {
      "Country yesterday": countries_yesterday,
      "Cumulative Deaths yesterday": total_deaths_yesterday,
      "Daily Deaths yesterday": new_deaths_yesterday,
      "Population Cumulative Deaths yesterday": total_deaths_pop_yesterday,
      "Population Daily Deaths yesterday": new_deaths_pop_yesterday,
  }
  data_yesterday2 = {
      "Country yesterday2": countries_yesterday2,
      "Cumulative Deaths yesterday2": total_deaths_yesterday2,
      "Daily Deaths yesterday2": new_deaths_yesterday2,
      "Population Cumulative Deaths yesterday2": total_deaths_pop_yesterday2,
      "Population Daily Deaths yesterday2": new_deaths_pop_yesterday2,
  }

  return data_today,data_yesterday,data_yesterday2

